# Script PowerShell pour la creation d'OU et de groupe dans l'ADDS

# Creation des variables Couleurs
$Green = "Green"
$Yellow = "Yellow"
$White = "White"
$Red = "Red"
$Cyan= "Cyan"

# Fonction pour voir la liste des OU du domaine
function OuList {
    Import-Module ActiveDirectory
    Get-ADOrganizationalUnit -Filter 'Name -like "*"' -Server "wilder.lan" | Format-Table Name, DistinguishedName -AutoSize
}

# Fonction pour voir la liste des groupes du domaine
function GroupList {
    write-Host ""
    Import-Module ActiveDirectory
    Get-ADGroup -Filter 'Name -like "*"' -Server "wilder.lan" | Format-Table Name, GroupScope, DistinguishedName -AutoSize
    }
    
# Fonction pour creer un OU
function CreateOu {

    while ($true) {
        Write-Host "`n<=== CREATION 'OU' ===>`n" -ForegroundColor Green
        Write-Host "[1] " -ForegroundColor Cyan -NoNewline; Write-Host "Creer un OU ou plusieurs dans la racine"
        Write-Host "[2] " -ForegroundColor Cyan -NoNewline; Write-Host "Creer un OU ou plusieurs dans un chemin specifique"
        Write-Host "[3] " -ForegroundColor Cyan -NoNewline; Write-Host "Creer des OUs en escalade (hiérarchie)"
        Write-Host "[4] " -ForegroundColor Cyan -NoNewline; Write-Host "Creer une OU dans une OU existante"
        Write-Host "[5] " -ForegroundColor Red -NoNewline; Write-Host "Retour au menu precedent`n"
        $choix = Read-Host "Veuillez choisir une option "

        switch ($choix) {
            "1" {
                # Option 1 : Créer un ou plusieurs OUs dans la racine
                Write-Host ""
                $NameOuList = Read-Host "Veuillez renseigner les noms des OUs (séparés par des virgules)"
                $NameOuArray = $NameOuList -split ","

                foreach ($NameOu in $NameOuArray) {
                    $NameOu = $NameOu.Trim()
                    try {
                        New-ADOrganizationalUnit -Name "$NameOu" -Path "DC=wilder,DC=lan"
                        Write-Host "`nL'OU '$NameOu' a été créé avec succès.`n" -ForegroundColor Green
                    } 
                    catch {
                        Write-Host "`n[ERREUR]! L'OU '$NameOu' n'a pas été créé.`n" -ForegroundColor Red
                    }
                }
            }

            "2" {
                # Option 2 : Créer un ou plusieurs OUs dans un chemin spécifique
                Write-Host ""
                $NameOuList = Read-Host "Veuillez renseigner les noms des OUs (séparés par des virgules)"
                $LocationOu = Read-Host "Veuillez renseigner l'emplacement de destination des OUs (par ex. OU=Departements)"
                $NameOuArray = $NameOuList -split ","

                foreach ($NameOu in $NameOuArray) {
                    $NameOu = $NameOu.Trim()
                    try {
                        New-ADOrganizationalUnit -Name "$NameOu" -Path "OU=$LocationOu,DC=wilder,DC=lan"
                        Write-Host "`nL'OU '$NameOu' a été créé avec succès dans 'OU=$LocationOu'.`n" -ForegroundColor Green
                    } 
                    catch {
                        Write-Host "`n[ERREUR]! L'OU '$NameOu' n'a pas été créé.`n" -ForegroundColor Red
                    }
                }
            }

            "3" {
                # Option 3 : Créer des OUs en escalade
                Write-Host ""
                $HierarchicalPath = Read-Host "Veuillez renseigner la hiérarchie des OUs à créer (ex: EquipeA/EquipeB/EquipeC)"
                $PathElements = $HierarchicalPath -split "/"
                $CurrentPath = "DC=wilder,DC=lan"

                foreach ($OU in $PathElements) {
                    $OU = $OU.Trim()
                    try {
                        New-ADOrganizationalUnit -Name "$OU" -Path $CurrentPath
                        Write-Host "`nL'OU '$OU' a été créé avec succès sous '$CurrentPath'.`n" -ForegroundColor Green
                        $CurrentPath = "OU=$OU,$CurrentPath"
                    } 
                    catch {
                        Write-Host "`n[ERREUR]! L'OU '$OU' n'a pas été créé.`n" -ForegroundColor Red
                        break
                    }
                }
            }

            "4" {
                # Option 4 : Créer une seule OU dans une OU existante
                Write-Host ""
                $LocationOu = Read-Host "Veuillez renseigner l'emplacement de l'OU existante (ex: OU=Departements,DC=wilder,DC=lan)"
                $NameOu = Read-Host "Veuillez renseigner le nom de la nouvelle OU à créer"
                try {
                    New-ADOrganizationalUnit -Name "$NameOu" -Path "$LocationOu"
                    Write-Host "`nL'OU '$NameOu' a été créée avec succès sous '$LocationOu'.`n" -ForegroundColor Green
                } 
                catch {
                    Write-Host "`n[ERREUR]! L'OU '$NameOu' n'a pas été créée.`n" -ForegroundColor Red
                }
            }

            "5" {
                return
            }

            default {
                Write-Host "`nChoix invalide, veuillez recommencer" -ForegroundColor Red
            }
        }
    }
}



# Fonction pour creer un groupe
function CreateGroup {

    while ($true) {
        Write-Host "`n<=== CREATION 'GROUPES' ===>`n" -f $Green
        Write-Host "[1] " -ForegroundColor $CYAN -NoNewline; Write-Host "Creer un groupe dans la racine"
        Write-Host "[2] " -ForegroundColor $CYAN -NoNewline; Write-Host "Creer un groupe dans un chemin specifique"
        Write-Host "[3] " -ForegroundColor $Red -NoNewline; Write-Host "Retour au menu precedent`n"
        $choix = Read-Host "Veuillez choisir une option "
    
    switch ($choix) {
        "1" {
            Write-Host ""    
        $NameGroup = Read-Host "Veuillez renseigner le nom de votre groupe "
        try {
            New-ADGroup -Name "$NameGroup" -Path "DC=wilder,DC=lan" -GroupScope Global -GroupCategory Security
            Write-Host "`nLe groupe '$NameGroup' a ete cree avec succes.`n" -ForegroundColor Green
         }
        catch {
            Write-Host "`n[ERREUR]! Le groupe '$NameGroup' n'a pas ete cree.`n" -ForegroundColor Red
        }
            }

        "2" {
    Write-Host ""    
    $NameGroup = Read-Host "Veuillez renseigner le nom de votre groupe "
    Write-Host ""
    $LocationGroup = Read-Host "Veuillez renseigner le chemin complet de l'OU cible (par ex. OU=SousEquipe,OU=EquipeA,OU=Departements)"
    try {
        New-ADGroup -Name "$NameGroup" -Path "$LocationGroup,DC=wilder,DC=lan" -GroupScope Global -GroupCategory Security
        Write-Host "`nLe groupe '$NameGroup' a ete cree avec succes dans '$LocationGroup'.`n" -ForegroundColor Green
    }
    catch {
        Write-Host "`n[ERREUR]! Le groupe '$NameGroup' n'a pas ete cree.`n" -ForegroundColor Red
    }
}

        "3" {
            return
        }

        default {
            Write-Host "`nChoix invalide, veuillez recommencer" -f $Red
        }
    }
}
}
# Boucle du menu
while ($true) {
    Write-Host "`n<=== MENU GESTION ACTIVE DIRECOTRY ===>`n" -f $Green
    Write-Host "[1] " -ForegroundColor $CYAN -NoNewline; Write-Host "Liste des OU"
    Write-Host "[2] " -ForegroundColor $CYAN -NoNewline; Write-Host "Liste des Groupes"
    Write-Host "[3] " -ForegroundColor $Yellow -NoNewline; Write-Host "Creer un OU"
    Write-Host "[4] " -ForegroundColor $Yellow -NoNewline; Write-Host "Creer un groupe"
    Write-Host "[x] " -ForegroundColor $Red -NoNewline; Write-Host "Sortir`n"
    $choix = Read-Host "Veuillez choisir une option "

    switch ($choix) {
        "1" {
            Write-Host "`nListe des OU :`n" -f $Yellow
            OuList
         }
        "2" {
            Write-Host "`nListe des groupes :`n" -f $Yellow
            GroupList
         }    
        "3" {
            CreateOu
         }
        "4" {
            CreateGroup
         }       
        "x" {
            Write-Host " `nExit`n" -f $Yellow
            exit 0
        }

        default {
            Write-Host "`nChoix invalide, veuillez recommencer" -f $Red
        }
    }
}
